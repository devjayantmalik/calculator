{"version":3,"sources":["components/ResultBar.js","components/Button.js","App.js","serviceWorker.js","index.js"],"names":["ResultBar","value","className","disabled","Button","title","onClick","btnClasses","isOperator","defaultProps","App","state","equation","number","solution","_solveEquation","result","i","length","num1","operator","num2","console","log","_handleClear","setState","_handleOperator","Number","pop","toString","_handleNumber","num","this","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","querySelector","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.610b573e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ResultBar = ({ value }) => {\n  return (\n    <div className=\"control\">\n      <input\n        disabled\n        className=\"input is-info is-large has-text-right\"\n        value={value}\n      />\n    </div>\n  );\n};\n\nResultBar.propTypes = {\n  value: PropTypes.string.isRequired,\n};\nexport default ResultBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ title, onClick, isOperator }) => {\n  const btnClasses = isOperator ? \"is-danger\" : \"is-info\";\n  return (\n    <button\n      className={`button ${btnClasses} is-fullwidth is-outlined is-large`}\n      onClick={() => onClick(title)}\n    >\n      {title}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  isOperator: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  isOperator: false,\n};\n\nexport default Button;\n","import React from \"react\";\nimport ResultBar from \"./components/ResultBar\";\nimport Button from \"./components/Button\";\n\nclass App extends React.Component {\n  state = {\n    equation: [],\n    number: \"\",\n    solution: 0,\n  };\n\n  _solveEquation = (equation) => {\n    let result = 0;\n\n    for (let i = 0; i < equation.length; i = i + 3) {\n      const num1 = equation[i];\n      const operator = equation[i + 1];\n      const num2 = equation[i + 2];\n\n      switch (operator) {\n        case \"+\":\n          result = num1 + num2;\n          break;\n        case \"-\":\n          result = num1 - num2;\n          break;\n        case \"/\":\n          result = num1 / num2;\n          break;\n        case \"*\":\n          result = num1 * num2;\n          break;\n        default:\n          console.log(`invalid operator found: ${operator}`);\n      }\n    }\n\n    return result;\n  };\n\n  _handleClear = () => {\n    this.setState({ equation: [], number: \"\", solution: 0 });\n  };\n\n  _handleOperator = (operator) => {\n    // add the number and operator to equation\n    const equation = [\n      ...this.state.equation,\n      Number(this.state.number),\n      operator,\n    ];\n\n    if (equation[equation.length - 1] === \"=\") {\n      equation.pop();\n    }\n    this.setState({ equation: equation, number: \"\" });\n\n    if (operator === \"=\") {\n      // solve the equation and print the result\n      const solution = this._solveEquation(equation);\n      this.setState({ solution: solution, number: solution.toString() });\n      return;\n    }\n  };\n\n  _handleNumber = (num) => {\n    this.setState({ number: `${this.state.number}${num}` });\n  };\n\n  render() {\n    return (\n      <main className=\"container mt-6 pl-3 pr-3 pt-3 pb-3\">\n        <section className=\"mb-3 mt-3 \">\n          <ResultBar value={this.state.number || \"0\"} />\n        </section>\n        <section>\n          <div className=\"columns is-mobile\">\n            <div className=\"column \">\n              <Button title=\"C\" isOperator onClick={this._handleClear} />\n            </div>\n            <div className=\"column\">\n              <Button title=\"0\" onClick={this._handleNumber} />\n            </div>\n            <div className=\"column\">\n              <Button title=\"*\" isOperator onClick={this._handleOperator} />\n            </div>\n            <div className=\"column\">\n              <Button title=\"/\" isOperator onClick={this._handleOperator} />\n            </div>\n          </div>\n\n          <div className=\"columns is-mobile\">\n            <div className=\"column\">\n              <Button title=\"7\" onClick={this._handleNumber} />\n            </div>\n            <div className=\"column\">\n              <Button title=\"8\" onClick={this._handleNumber} />\n            </div>\n            <div className=\"column\">\n              <Button title=\"9\" onClick={this._handleNumber} />\n            </div>\n            <div className=\"column\">\n              <Button title=\"-\" isOperator onClick={this._handleOperator} />\n            </div>\n          </div>\n\n          <div className=\"columns is-mobile\">\n            <div className=\"column\">\n              <Button title=\"4\" onClick={this._handleNumber} />\n            </div>\n            <div className=\"column\">\n              <Button title=\"5\" onClick={this._handleNumber} />\n            </div>\n            <div className=\"column\">\n              <Button title=\"6\" onClick={this._handleNumber} />\n            </div>\n            <div className=\"column\">\n              <Button title=\"+\" isOperator onClick={this._handleOperator} />\n            </div>\n          </div>\n\n          <div className=\"columns is-mobile\">\n            <div className=\"column\">\n              <Button title=\"1\" onClick={this._handleNumber} />\n            </div>\n            <div className=\"column\">\n              <Button title=\"2\" onClick={this._handleNumber} />\n            </div>\n            <div className=\"column\">\n              <Button title=\"3\" onClick={this._handleNumber} />\n            </div>\n            <div className=\"column\">\n              <Button title=\"=\" isOperator onClick={this._handleOperator} />\n            </div>\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./bulma.css\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n\nserviceWorker.register();\n"],"sourceRoot":""}